<div data-controller="demo">
  <h2>Demo</h2>

  <!-- V1 Facts -->
  <section class="demo-section">
    <h3>GET /api/v1/facts</h3>
    <div class="demo-controls">
      <label for="v1-number">Number of facts (1-5):</label>
      <input type="number" id="v1-number" data-demo-target="v1Number" value="1" min="1" max="5" class="demo-input demo-input-small">
      <label style="margin-left: 15px;">
        <input type="checkbox" data-demo-target="v1Raw"> Return plain text
      </label>
      <button data-action="click->demo#fetchV1Facts" class="demo-button">Test</button>
    </div>
    <div data-demo-target="v1Url" class="demo-url"></div>
    <pre data-demo-target="v1Response" class="demo-response demo-response-short"><code>Click "Test" to see the response</code></pre>

    <h4>Example Code</h4>
    <pre class="demo-code"><code class="language-javascript">// Get 2 facts as JSON
fetch('https://dogapi.dog/api/v1/facts?number=2')
  .then(response => response.json())
  .then(data => console.log(data.facts));

// Get 1 fact as plain text
fetch('https://dogapi.dog/api/v1/facts?number=1&raw=true')
  .then(response => response.text())
  .then(fact => console.log(fact));</code></pre>

  </section>

  <!-- V2 Facts -->
  <section class="demo-section">
    <h3>GET /api/v2/facts</h3>
    <div class="demo-controls">
      <label for="v2-limit">Limit (1-5):</label>
      <input type="number" id="v2-limit" data-demo-target="v2Limit" value="1" min="1" max="5" class="demo-input demo-input-small">
      <button data-action="click->demo#fetchV2Facts" class="demo-button">Test</button>
    </div>
    <div data-demo-target="v2FactsUrl" class="demo-url"></div>
    <pre data-demo-target="v2FactsResponse" class="demo-response demo-response-short"><code>Click "Test" to see the response</code></pre>

    <pre class="demo-code"><code class="language-javascript">// V2 returns JSON API format
fetch('https://dogapi.dog/api/v2/facts?limit=2')
  .then(response => response.json())
  .then(data => {
    data.data.forEach(fact => {
      console.log(fact.attributes.body);
    });
  });</code></pre>
  </section>

  <!-- V2 Breeds -->
  <section class="demo-section">
    <h3>GET /api/v2/breeds</h3>
    <div class="demo-controls">
      <label for="breeds-size">Page size:</label>
      <input type="number" id="breeds-size" data-demo-target="breedsSize" value="5" min="1" max="1000" class="demo-input demo-input-medium">
      <button data-action="click->demo#fetchBreeds" class="demo-button">Test</button>
      <button data-action="click->demo#fetchAllBreeds" class="demo-button-secondary">Get All (~280)</button>
    </div>
    <div data-demo-target="breedsUrl" class="demo-url"></div>
    <pre data-demo-target="breedsResponse" class="demo-response"><code>Click "Test" to see the response</code></pre>
    <div data-demo-target="breedHint" class="demo-hint"></div>

    <pre class="demo-code"><code class="language-javascript">// Get first 10 breeds
fetch('https://dogapi.dog/api/v2/breeds?page[size]=10')
  .then(response => response.json())
  .then(data => console.log(data.data));

// Get all breeds in one request
fetch('https://dogapi.dog/api/v2/breeds?page[size]=1000')
  .then(response => response.json())
  .then(data => console.log(`Found ${data.data.length} breeds`));</code></pre>
  </section>

  <!-- Individual Breed -->
  <section class="demo-section">
    <h3>GET /api/v2/breeds/{id}</h3>
    <div class="demo-controls">
      <label for="breed-id">Breed ID:</label>
      <input type="text" id="breed-id" data-demo-target="breedId" placeholder="Enter a Breed ID" class="demo-input demo-input-large">
      <button data-action="click->demo#fetchBreed" class="demo-button">Test</button>
    </div>
    <div data-demo-target="breedUrl" class="demo-url"></div>
    <pre data-demo-target="breedResponse" class="demo-response"><code>Click "Test" to see the response</code></pre>

    <pre class="demo-code"><code class="language-javascript">// Get specific breed details
const breedId = "your-breed-id-here";
fetch(`https://dogapi.dog/api/v2/breeds/${breedId}`)
  .then(response => response.json())
  .then(data => {
    const breed = data.data.attributes;
    console.log(`Name: ${breed.name}`);
    console.log(`Description: ${breed.description}`);
    console.log(`Life span: ${breed.life.min}-${breed.life.max} years`);
  });</code></pre>
  </section>

  <!-- V2 Groups -->
  <section class="demo-section">
    <h3>GET /api/v2/groups</h3>
    <div class="demo-controls">
      <button data-action="click->demo#fetchGroups" class="demo-button">Test</button>
    </div>
    <div data-demo-target="groupsUrl" class="demo-url"></div>
    <pre data-demo-target="groupsResponse" class="demo-response demo-response-short"><code>Click "Test" to see the response</code></pre>
    <div data-demo-target="groupHint" class="demo-hint"></div>

    <pre class="demo-code"><code class="language-javascript">// Get all dog groups with their breeds
fetch('https://dogapi.dog/api/v2/groups')
  .then(response => response.json())
  .then(data => {
    data.data.forEach(group => {
      console.log(`${group.attributes.name}: ${group.relationships.breeds.data.length} breeds`);
    });
  });</code></pre>
  </section>

  <!-- Individual Group -->
  <section class="demo-section">
    <h3>GET /api/v2/groups/{id}</h3>
    <div class="demo-controls">
      <label for="group-id">Group ID:</label>
      <input type="text" id="group-id" data-demo-target="groupId" placeholder="Enter a Group ID" class="demo-input demo-input-large">
      <button data-action="click->demo#fetchGroup" class="demo-button">Test</button>
    </div>
    <div data-demo-target="groupUrl" class="demo-url"></div>
    <pre data-demo-target="groupResponse" class="demo-response"><code>Click "Test" to see the response</code></pre>

    <pre class="demo-code"><code class="language-javascript">// Get specific group details with breeds
const groupId = "your-group-id-here";
fetch(`https://dogapi.dog/api/v2/groups/${groupId}`)
  .then(response => response.json())
  .then(data => {
    const group = data.data.attributes;
    const breedCount = data.data.relationships.breeds.data.length;
    console.log(`Group: ${group.name}`);
    console.log(`Contains ${breedCount} breeds`);
  });</code></pre>
  </section>

</div>

<link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism.min.css" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-core.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/autoloader/prism-autoloader.min.js"></script>
<script src="https://unpkg.com/@hotwired/stimulus/dist/stimulus.umd.js"></script>

<script>
const application = Stimulus.Application.start();

application.register("demo", class extends Stimulus.Controller {
  static targets = [
    'v1Number', 'v1Raw', 'v1Url', 'v1Response',
    'v2Limit', 'v2FactsUrl', 'v2FactsResponse',
    'breedsSize', 'breedsUrl', 'breedsResponse', 'breedHint',
    'breedId', 'breedUrl', 'breedResponse',
    'groupsUrl', 'groupsResponse', 'groupHint',
    'groupId', 'groupUrl', 'groupResponse'
  ];

  async fetchV1Facts() {
    const number = this.v1NumberTarget.value;
    const raw = this.v1RawTarget.checked;

    let url = `https://dogapi.dog/api/v1/facts?number=${number}`;
    if (raw) url += '&raw=true';

    this.v1UrlTarget.textContent = url;

    try {
      const response = await fetch(url);
      const data = raw ? await response.text() : await response.json();
      this.v1ResponseTarget.innerHTML = `<code>${raw ? data : JSON.stringify(data, null, 2)}</code>`;
      Prism.highlightElement(this.v1ResponseTarget.querySelector('code'));
    } catch (error) {
      this.v1ResponseTarget.innerHTML = `<code style="color: red;">Error: ${error.message}</code>`;
    }
  }

  async fetchV2Facts() {
    const limit = this.v2LimitTarget.value;
    const url = `https://dogapi.dog/api/v2/facts?limit=${limit}`;

    this.v2FactsUrlTarget.textContent = url;

    try {
      const response = await fetch(url);
      const data = await response.json();
      this.v2FactsResponseTarget.innerHTML = `<code class="language-json">${JSON.stringify(data, null, 2)}</code>`;
      Prism.highlightElement(this.v2FactsResponseTarget.querySelector('code'));
    } catch (error) {
      this.v2FactsResponseTarget.innerHTML = `<code style="color: red;">Error: ${error.message}</code>`;
    }
  }

  async fetchBreeds() {
    const size = this.breedsSizeTarget.value;
    const url = `https://dogapi.dog/api/v2/breeds?page[size]=${size}`;

    this.breedsUrlTarget.textContent = url;

    try {
      const response = await fetch(url);
      const data = await response.json();

      let content = JSON.stringify(data, null, 2);
      this.breedsResponseTarget.innerHTML = `<code class="language-json">${content}</code>`;

      // Show breed selection hint
      if (data.data && data.data.length > 0) {
        this.breedHintTarget.classList.add('show');
        this.breedHintTarget.innerHTML = `ðŸ’¡ Found ${data.data.length} breeds. Copy any breed ID from the response above to test the individual breed endpoint below.`;
      }

      Prism.highlightElement(this.breedsResponseTarget.querySelector('code'));
    } catch (error) {
      this.breedsResponseTarget.innerHTML = `<code style="color: red;">Error: ${error.message}</code>`;
    }
  }

  async fetchAllBreeds() {
    this.breedsSizeTarget.value = '1000';
    await this.fetchBreeds();
  }

  async fetchBreed() {
    const id = this.breedIdTarget.value.trim();
    if (!id) {
      alert('Please enter a breed ID');
      return;
    }

    const url = `https://dogapi.dog/api/v2/breeds/${id}`;
    this.breedUrlTarget.textContent = url;

    try {
      const response = await fetch(url);
      if (response.status === 404) {
        this.breedResponseTarget.innerHTML = '<code style="color: orange;">Breed not found (404)</code>';
        return;
      }
      const data = await response.json();
      this.breedResponseTarget.innerHTML = `<code class="language-json">${JSON.stringify(data, null, 2)}</code>`;
      Prism.highlightElement(this.breedResponseTarget.querySelector('code'));
    } catch (error) {
      this.breedResponseTarget.innerHTML = `<code style="color: red;">Error: ${error.message}</code>`;
    }
  }

  async fetchGroups() {
    const url = 'https://dogapi.dog/api/v2/groups';
    this.groupsUrlTarget.textContent = url;

    try {
      const response = await fetch(url);
      const data = await response.json();
      this.groupsResponseTarget.innerHTML = `<code class="language-json">${JSON.stringify(data, null, 2)}</code>`;

      // Show group selection hint
      if (data.data && data.data.length > 0) {
        this.groupHintTarget.classList.add('show');
        this.groupHintTarget.innerHTML = `ðŸ’¡ Found ${data.data.length} groups. Copy any group ID from the response above to test the individual group endpoint below.`;
      }

      Prism.highlightElement(this.groupsResponseTarget.querySelector('code'));
    } catch (error) {
      this.groupsResponseTarget.innerHTML = `<code style="color: red;">Error: ${error.message}</code>`;
    }
  }

  async fetchGroup() {
    const id = this.groupIdTarget.value.trim();
    if (!id) {
      alert('Please enter a group ID');
      return;
    }

    const url = `https://dogapi.dog/api/v2/groups/${id}`;
    this.groupUrlTarget.textContent = url;

    try {
      const response = await fetch(url);
      if (response.status === 404) {
        this.groupResponseTarget.innerHTML = '<code style="color: orange;">Group not found (404)</code>';
        return;
      }
      const data = await response.json();
      this.groupResponseTarget.innerHTML = `<code class="language-json">${JSON.stringify(data, null, 2)}</code>`;
      Prism.highlightElement(this.groupResponseTarget.querySelector('code'));
    } catch (error) {
      this.groupResponseTarget.innerHTML = `<code style="color: red;">Error: ${error.message}</code>`;
    }
  }
});
</script>
